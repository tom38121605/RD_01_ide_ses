

注意：在ommo的nrf52的工程中， “project \options\code\Linker\linker: ” 项要设置成GNU (而不是SEGGER)   //release

----  SES中烧录步骤 --------------

  。ses修改hex烧录起始地址： 右键单击 project \options \ 左上角的下拉选Common（code上面）\code \linker \section placement macros \FLASH_START \设为0x00

  。设置jlink烧录: 右键单击 project \options\code
     .\Linker\linker:                                              SEGGER

  。设置jlink烧录: 右键单击 project \options\debug

     . \debugger\Tartet conecction:                      JLink 
     . \debugger\Device:                                      Nrf52833_xxAA
     .\GDB Server\Type:                                       J-link
      .\GDB Server\GDB Server command line:     "$(JLinkDir)/JLinkGDBServerCL" -device "$(DeviceName)" -silent
     .\J-link\Host connection:                               USB
     .\J-link\Target interface type:                        SWD
     .\J-link\Speed:                                             4000KHz


  。选择release编译： 
     右键单击 project \options \ 左上角的下拉选release（code上面） 
     菜单build\build solution


   。烧录
      点击右上角的右向三角形（start excution）


----------- ommo 的nrf52工程的编译 ----------

1. 问题：缺少 git_describe.h 文件
#include "git_describe.h"      //这里     utilis.cpp

分析： 在main分支中，这个文件会由 flash_files/build.py 自动生成
          在develop分支中，  flash_files/generate_protobuf.bat, 可产生git_describe.h 文件  （它还有一个功能： 好像是下载一个.proto的文件到wokspace目录）
解决： 在ommo_nrf\ flash_files目录下面，有一个 generate_protobuf_lib.bat的文件，双击运行，即可产生git_describe.h文件，ok  （待验证）









编译时间： 大约2分10秒

